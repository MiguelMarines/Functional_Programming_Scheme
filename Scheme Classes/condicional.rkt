#lang racket

;; (a)
(define n1 500)

(cond
  [(<= n1 1000) (* .040 1000)]
  [(<= n1 5000) (+ (* 1000 .040) 
                  (* (- n1 1000) .045))]
  [else (+ (* 1000 .040) 
           (* 4000 .045)
           (* (- n1 10000) .055))])
"should be"
40

;; (b)

(define n2 2800)
(cond
  [(<= n2 1000) (* .040 1000)]
  [(<= n2 5000) (+ (* 1000 .040) 
                  (* (- n2 1000) .045))]
  [else (+ (* 1000 .040) 
           (* 4000 .045)
           (* (- n2 10000) .055))])
"should be"
121

;; (c)
(define n3 15000)
(cond
  [(<= n3 1000) (* .040 1000)]
  [(<= n3 5000) (+ (* 1000 .040) 
                  (* (- n3 1000) .045))]
  [else (+ (* 1000 .040) 
           (* 4000 .045)
           (* (- n3 10000) .055))])
"should be"
495